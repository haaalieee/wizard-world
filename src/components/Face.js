/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: roymcintosh (https://sketchfab.com/roymcintosh)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/wizard-de9b6e6d54634cf086faf8c7c2cce148
title: Wizard
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import "../shaders/ParticleMaterial";
import ParticleMaterial from '../shaders/ParticleMaterial';

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF('/face.gltf');
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0, 0.54, 0.69]} rotation={[-Math.PI / 2, 0, 0]}>
            <group position={[0, 0.69, -0.54]}>
              <mesh geometry={nodes['Sphere004_08_-_Default_0'].geometry}>
              <ParticleMaterial />
              </mesh>
            </group>
            <group position={[0, 0.69, -0.54]}>
              <mesh geometry={nodes['Sphere003_08_-_Default_0'].geometry} material={materials['08_-_Default']} />
            </group>
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.RetopoGroup1_wire_134006006_0.geometry} material={materials.wire_134006006} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.mustash_hairnstuff_08___Default_0.geometry} material={materials.hairnstuff_08___Default} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.beard001_hairnstuff_08___Default_0.geometry} material={materials.hairnstuff_08___Default} />
          </group>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.ZBrush_defualt_group002_hairnstuff_08___Default_0.geometry} material={materials.hairnstuff_08___Default} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/face.gltf')
