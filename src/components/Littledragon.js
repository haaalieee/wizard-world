/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: bgkid0 (https://sketchfab.com/bgkid0)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/reborn-dragon-fly-bb4958b27f9e47be84d6eacf2fbb68f6
title: Reborn_Dragon_Fly
*/

import * as THREE from "three";
import React, { useEffect } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Littledragon({ ...props }) {
  const { scene, animations } = useGLTF("/littledragon.gltf");
  const { ref, actions } = useAnimations(animations);

  useEffect(() => {
    const action = actions["Take 001"];
    action.getClip().duration = 0.7;
    action.play();
  }, [actions]);

  useFrame(({ clock }) => {
    ref.current.rotation.y = THREE.MathUtils.lerp(
      ref.current.rotation.y,
      Math.cos(clock.getElapsedTime() / 2) * 2,
      0.05
    );

    ref.current.position.z = -Math.sin(clock.getElapsedTime() / 2) * 3;
  });

  return (
    <primitive
      object={scene}
      {...props}
      ref={ref}
    />
  );
}

useGLTF.preload("/littledragon.gltf");
